//Program to remove duplicate nodes from the Linked List
//Author : Krishank S. Mehta
//Date   : 1/14/2017
//Time   : 2:02 AM


#include<iostream>

using namespace std;

struct Node
{
    int data;
    Node *next;
};

void first_node(Node* head, int n)
{
    head->data=n;
    head->next=NULL;
}

void add_node(Node* head, int n)
{
    Node* Nextnode= new Node;
    Nextnode->data=n;
    Nextnode->next=NULL;
    Node *cur=head;

    while(cur)
    {
        if(cur->next==NULL)
        {
            cur->next=Nextnode;
            return;
        }
        cur=cur->next;
    }
}

void delete_node(Node** head,Node* node)
{
    Node* cur=*head;
    Node* pre=*head;

    while(cur)
    {
        if(cur==node)
        {
            pre->next=cur->next;
            return;
        }
        pre=cur;
        cur=cur->next;
    }
}

void remove_duplicate(Node** head)
{
    if((*head)->next==NULL)
    {
        return;
    }
    Node *cur=*head;
    Node *itr;
    while(cur)
    {
        itr=cur->next;
        while(itr)
        {
            if(cur->data==itr->data)
            {
                delete_node(head,itr);
            }
            itr=itr->next;
        }
        cur=cur->next;
    }
}

void display(Node* head)
{
    Node *cur;
    cur=head;
    while(cur)
    {

        cout<<cur->data<<" ";
        cur=cur->next;

    }
    cout<<endl<<endl;
}

int main ()
{
    Node *head= new Node;
    first_node(head,10);
    display(head);
    add_node(head,20);
    display(head);
    add_node(head,30);
    display(head);
    add_node(head,40);
    display(head);
    add_node(head,50);
    display(head);
    add_node(head,50);
    display(head);
    add_node(head,90);
    display(head);
    add_node(head,20);
    display(head);

    remove_duplicate(&head);
    display(head);

}
