//Reverse the linked List
//Author : Krishank S. Mehta
//Date   : 1/21/2017
//Time   : 4:19 AM


#include<iostream>

using namespace std;


struct node
{
    int data;
    node* next;

};

void init_node(node* head, int n)
{
    head->data=n;
    head->next=NULL;
}

void add_node(node* head,int n)
{
    node* newnode=new node;
    newnode->data=n;
    newnode->next=NULL;

    node* cur=head;

    while(cur)
    {
        if(cur->next==NULL)
        {
            cur->next=newnode;
            return;
        }
        cur=cur->next;
    }
}

void reverse_list(node** head)
{
    if(*head==NULL)
    {
        return;
    }
    node* current=*head;
    node*previous=NULL;
    node * next;
    while(current)
    {
        next=current->next;
        current->next=previous;
        previous=current;
        current=next;
    }
    *head=previous;

}

void display(node* head)
{
    node * cur=head;
    while(cur)
    {
        cout<<cur->data<<" ";
        cur=cur->next;
    }
    cout<<endl;
}

int main()
{
    node* head= new node;
    init_node(head,10);
    add_node(head,20);
    add_node(head,30);
    add_node(head,40);
    add_node(head,50);
    add_node(head,60);
    add_node(head,70);
    display(head);
    reverse_list(&head);
    display(head);



}
